deck
	wanted to learn NodeJS
		don't believe in toy examples
		build something I've always wanted
	express, ejs, socket.io
	code org:
		propagating closure variables from io.sockets.on to modules: client & server
		namespacing messages, so I know which file to look in

generate board (fully connected):
	NxM squares
	hex: N rows x M cols (rows move straight)
	hex: N cols x M rows (cols move straight)

	squares:
		xxx
		x x
		xxx

	hex cols:
		-_-
		-_-
		-_-

	hex rows:
		[[[
		]]]
		[[[

games:
	tic-tac-toe:  each player gets 6 markers that can be placed
	tactickle:    each player has 4 NPC's to move
	both:
		minPlayers = maxPlayers = 2
		admin cannot start game until correct number of players



board is fixed number of sections partitioned into cells (squares, hexes, etc) by non-zero-size boundaries
	each cell and boundary is an object
		positioned in game coordinates
		boundary extends one width past edge of cell
		scale factor maps game coordinates to canvas coordinates
	cell has ordered set of vertices
		draw faint lines from one vertex to next and finally back to first
	boundary is union of two edge connectors
		must conform to 2D plane geometry to allow line-of-sight
		wrap-around board
			if enabled, can reposition board origin anywhere inside canvas
			if cell more than 1/2 outside canvas boundary, wrap around
				draw boundary in both locations
			boundary connectors must conform to 2D toroidal geometry
				anything else must be done as warp
	line-of-sight
		two triangles
			find cells/boundaries with vertices in both triangles
			check if each contains sight-blocking object
		click to move:  if line-of-sight
		drop attack power on player:  attack can check line-of-sight

	drop object on board
		find all containing polygons, sort ascending by area
			need polygon-contains algorithm for hex grid
		check smallest one first
			drop on square with thornbush:
				if doesn't affect bush, can drop in square
		connectors are invisible, but still are drop targets

objects in a cell
	player
	treasure, key, fire, trap, large stone, etc, etc
objects on a cell boundary
	wall, door, fire, portal (for wrapping)

player
	stats
		movement: 1, action: 1, hit points: 1, max pool items: 1
	move to adjacent cell
		check if boundary allows it
		decrement movement
	pick up/use/drop object; use power
		can modify any stat
	modifier: drop on stat or power (no undo), increments power pool-count
	turn finished when action goes to zero or player presses Done
	trade powers/modifiers/objects
power
	stats
		pool-count:1
	counteraction: chance to defend against attack
object
	stats
		pool-count:1
	pick-up: if implemented, then drop is also allowed, even if not implemented
	throw: if implemented

wizwar
	intrinsic action:  1 hit point attack
	pick up any object decrements action by 1
	user max pool items: 7
	user hit points: 15
	user movement: 3
	only one modifier per power or stat, per turn
	max 1 treasure, no throw, treasure pool-count:0
	max 1 attack per turn
	wall: 20 hit points
	door: 15 hit points
